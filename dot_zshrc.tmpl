# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# If you come from bash you might have to change your $PATH.
export PATH=$HOME/bin:/usr/local/bin:$PATH

{{- if (eq .chezmoi.os "linux") }}
# LINUX-ONLY SETTINGS

# tilix fix
if [[ $TILIX_ID ]]; then
  source /etc/profile.d/vte-2.91.sh
fi

# brew post-setup
eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"

# asdf post-setup
. $(brew --prefix asdf)/libexec/asdf.sh

{{- else if (eq .chezmoi.os "darwin") }}
# MACOS-ONLY SETTINGS

# asdf post-setup
. $(brew --prefix asdf)/libexec/asdf.sh

{{- if (eq .chezmoi.hostname "Liquans-MacBook-Pro") }}
# PERSONAL MACBOOK

# The next line updates PATH for the Google Cloud SDK.
if [ -f '/Users/resurrexi/google-cloud-sdk/path.zsh.inc' ]; then . '/Users/resurrexi/google-cloud-sdk/path.zsh.inc'; fi

# The next line enables shell command completion for gcloud.
if [ -f '/Users/resurrexi/google-cloud-sdk/completion.zsh.inc' ]; then . '/Users/resurrexi/google-cloud-sdk/completion.zsh.inc'; fi

# psql client for gcloud sql auth proxy
export PATH=/usr/local/opt/libpq/bin:$PATH

{{- end -}}
{{- if (eq .chezmoi.hostname "005583A") }}
# WORK COMPUTER SETTINGS

# node certificate for zscaler (TQA)
export NODE_EXTRA_CA_CERTS="$HOME/.zscaler_ca.crt"

{{- end -}}
{{- end }}

# poetry post-setup
export PATH="$HOME/.local/bin:$PATH"

# Path to your oh-my-zsh installation.
export ZSH="$HOME/.oh-my-zsh"

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
ZSH_THEME="powerlevel10k/powerlevel10k"

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in $ZSH/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to automatically update without prompting.
# DISABLE_UPDATE_PROMPT="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS=true

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
#
# INSTRUCTIONS FOR CHEZMOI
# If custom plugin, add it via .chezmoiexternal.toml
plugins=(
    git
    poetry
    fzf
    fzf-tab
    zsh-autosuggestions
    fast-syntax-highlighting
{{- if eq .chezmoi.os "linux" "darwin" }}
    gcloud
{{- end }}
    vi-mode
)

source $ZSH/oh-my-zsh.sh

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi
export EDITOR='nvim'
export VISUAL='nvim'

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"
alias la="exa -la --group-directories-first --icons --color=always --group | less -iXR"
alias -g G="| grep -i"
alias ls="n -e"

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

# set custom paths
export XDG_CONFIG_HOME=${XDG_CONFIG_HOME:-$HOME/.config}
export XDG_DATA_HOME=${XDG_DATA_HOME:-$HOME/.local/share}

# custom fzf config
export FZF_DEFAULT_COMMAND="fd --type f --follow --hidden --exclude .git --exclude node_modules"
export FZF_DEFAULT_OPTS="--no-mouse --height 40% --reverse --info inline --preview='[[ \$(file --mime {}) =~ binary ]] && echo {} is a binary || (bat --style=numbers --color=always --line-range :500 {} || cat {}) 2> /dev/null | head -n 500' --preview-window='right:hidden:wrap' --bind='?:toggle-preview,f2:refresh-preview,ctrl-f:preview-down,ctrl-b:preview-up'"
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"

# bat config
export MANPAGER="sh -c 'col -bx | bat -l man -p'"
export BAT_PAGER="less -RF"

# fzf-tab config
# disable sort when completing `git checkout`
zstyle ':completion:*:git-checkout:*' sort false
# set descriptions format to enable group support
zstyle ':completion:*:descriptions' format '[%d]'
# set list-colors to enable filename colorizing
zstyle ':completion:*' list-colors ${(s.:.)LS_COLORS}
# preview directory's content with exa when completing cd
zstyle ':fzf-tab:complete:cd:*' fzf-preview 'exa -1 --color=always $realpath'
# preview files with bat
zstyle ':fzf-tab:complete:*:*' fzf-preview \
    '[[ $(file --mime $realpath) =~ binary ]] && echo $realpath is a binary || (bat --style=numbers --color=always --line-range :500 $realpath || cat $realpath) 2> /dev/null | head -n 500'
# switch group using `,` and `.`
zstyle ':fzf-tab:*' switch-group ',' '.'

# nnn options
# context colors
export NNN_COLORS='#fc212680;74b5'
# file colors
export NNN_FCOLORS='2ae42123008127f0abc5e2fb'
# cd on quit (invoked with ^G)
n()
{
    # Block nesting of nnn in subshells
    if [ -n $NNNLVL ] && [ "${NNNLVL:-0}" -ge 1 ]; then
        echo "nnn is already running"
        return
    fi

    # The behaviour is set to cd on quit (nnn checks if NNN_TMPFILE is set)
    # To cd on quit only on ^G, either remove the "export" as in:
    #    NNN_TMPFILE="${XDG_CONFIG_HOME:-$HOME/.config}/nnn/.lastd"
    #    (or, to a custom path: NNN_TMPFILE=/tmp/.lastd)
    # or, export NNN_TMPFILE after nnn invocation
    export NNN_TMPFILE="${XDG_CONFIG_HOME:-$HOME/.config}/nnn/.lastd"

    # Unmask ^Q (, ^V etc.) (if required, see `stty -a`) to Quit nnn
    # stty start undef
    # stty stop undef
    # stty lwrap undef
    # stty lnext undef

    nnn "$@"

    if [ -f "$NNN_TMPFILE" ]; then
            . "$NNN_TMPFILE"
            rm -f "$NNN_TMPFILE" > /dev/null
    fi
}

# settings for vi-mode zsh plugin
# be sure to also remove `vi-mode` from the plugins list above if removing this setting
export VI_MODE_SET_CURSOR=true
export MODE_INDICATOR="%F{white}+%f"
export INSERT_MODE_INDICATOR="%F{yellow}+%f"
